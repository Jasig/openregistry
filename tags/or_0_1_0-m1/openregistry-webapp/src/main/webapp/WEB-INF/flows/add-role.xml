<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2009 Jasig, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
    http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

    <input name="sorPerson" />

    <view-state id="selectRole" model="sorPerson" view="openregistry.person.update.selectRole">
        <binder>
            <binding property="roleInfo" converter="roleConverter" required="true" />
        </binder>
        <on-entry>
            <evaluate expression="referenceRepository.getRoleInfos()" result="flowScope.roleInfoList" />
            <set name="viewScope.command" value="'sorPerson'" />
            <set name="viewScope.roleInfoList" value="roleInfoList" />
        </on-entry>
        <transition on="submitUpdateRole" to="updateRole" >
            <set name="requestScope.roleId" value="requestParameters.roleId" type="long" />
            <evaluate expression="personRepository.findSorRoleByInternalId(roleId)" result="flowScope.role"/>
        </transition>
        <transition on="submitSelectRole" to="checkUniqueRole" >
            <set name="flowScope.roleInfoCode" value="requestParameters.roleInfoCode" />
        </transition>
    </view-state>

    <decision-state id="checkUniqueRole">
        <if test="roleAction.isRoleNewForPerson(sorPerson, roleInfoCode, messageContext)" then="addRole" else="selectRole" />
    </decision-state>

    <view-state id="addRole" model="role" view="openregistry.role.add">
        <on-entry>
            <set name="viewScope.command" value="'role'" />
            <evaluate expression="referenceRepository.getPeople()" result="flowScope.sponsorList" />
            <evaluate expression="referenceRepository.getCountries()" result="flowScope.countryList" />
            <evaluate expression="roleAction.initSorRole(sorPerson, roleInfoCode)" result="flowScope.role"/>            
        </on-entry>
        <transition on="submitAddRole" to="roleWasAdded" >
            <evaluate expression="roleAction.addSorRole(sorPerson, role, messageContext)"/>
        </transition>
        <transition on="cancelAddRole" to="selectRole" validate="false" bind="false" />
    </view-state>

    <subflow-state id="updateRole" subflow="updateRole" >
        <input name="role" />
        <input name="sorPerson" />
        <transition on="roleWasUpdated" to="managePersonRoles">
            <set name="flowScope.infoModel" value="'Role Updated'" />
        </transition>
    </subflow-state>

    <end-state id="roleWasAdded" >
        <output name="role" value="role"/>
    </end-state>

    <end-state id="managePersonRoles" />

</flow>