package org.openregistry.integration

import groovy.xml.StreamingMarkupBuilder
import java.text.SimpleDateFormat

/**
 * Groovy-based implementation
 * @since 1.0
 */
public class DefaultIdentifierChangeEventNotification implements IdentifierChangeEventNotification {

  //The setter is auto-generated by Groovy, so the correct type will be injected by Spring
  def identifierChangeEventSender;

  def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS")

  public void createAndSendFor(String internalIdentifierType,
                               String internalIdentifierValue,
                               String changedIdentifierType,
                               String changedIdentifierValue) {

    this.identifierChangeEventSender.asyncSend(
            buildEventXmlMessage(internalIdentifierType,
                    internalIdentifierValue,
                    changedIdentifierType,
                    changedIdentifierValue))
  }

  private def buildEventXmlMessage(internalIdType, internalId, changedIdType, changedId) {
    def xml = new StreamingMarkupBuilder().bind {
      "open-registry-person-identifier-change-event"(timestamp: df.format(new Date())) {
        identifier() {
          internal(type: internalIdType, value: internalId)
          changed(type: changedIdType, value: changedId)
        }
      }
    }.toString()
  }
}