<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2009 Jasig, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">

    <jee:jndi-lookup id="casServiceUrl" jndi-name="conf/cas/serviceUrl" expected-type="java.lang.String"/>
    <jee:jndi-lookup id="casLoginUrl" jndi-name="conf/cas/loginUrl" expected-type="java.lang.String"/>
    <jee:jndi-lookup id="casProxyReceptorUrl" jndi-name="conf/cas/proxyReceptorUrl" expected-type="java.lang.String"/>
    <jee:jndi-lookup id="casServerHost" jndi-name="conf/cas/serverHost" expected-type="java.lang.String"/>
    <jee:jndi-lookup id="casRenew" jndi-name="conf/cas/renew" expected-type="java.lang.String"/>
    <jee:jndi-lookup id="casSpringSecurityAuthProviderKey" jndi-name="conf/cas/springSecurityAuthProviderKey" expected-type="java.lang.String"/>

    <bean id="springSecurityFilterChain" class="org.springframework.security.util.FilterChainProxy">
        <sec:filter-chain-map path-type="ant">
            <sec:filter-chain pattern="/images/**" filters="none" />
            <sec:filter-chain pattern="/js/**" filters="none" />
            <sec:filter-chain pattern="/css/**" filters="none" />
            <sec:filter-chain pattern="/errors/*.htm" filters="none" />
            <sec:filter-chain pattern="/j_spring_cas_security_check" filters="httpSessionContextIntegrationFilter,logoutFilter,casProcessingFilter,securityContextHolderAwareRequestFilter,casExceptionTranslationFilter,filterInvocationInterceptor" />
            <sec:filter-chain pattern="/**/*.htm*" filters="httpSessionContextIntegrationFilter,logoutFilter,casProcessingFilter,securityContextHolderAwareRequestFilter,casExceptionTranslationFilter,filterInvocationInterceptor"/>
            <sec:filter-chain pattern="/**/people/**/activation*" filters="httpSessionContextIntegrationFilter,basicProcessingFilter,securityContextHolderAwareRequestFilter,basicExceptionTranslationFilter,filterInvocationInterceptor"/>
            <sec:filter-chain pattern="/**/people/**/activation/*" filters="httpSessionContextIntegrationFilter,basicProcessingFilter,securityContextHolderAwareRequestFilter,basicExceptionTranslationFilter,filterInvocationInterceptor"/>
        </sec:filter-chain-map>
    </bean>


    <bean id="filterInvocationInterceptor" class="org.springframework.security.intercept.web.FilterSecurityInterceptor"
        p:authenticationManager-ref="authenticationManager"
        p:accessDecisionManager-ref="accessDecisionManager">
        <property name="objectDefinitionSource">
            <value>
                PATTERN_TYPE_APACHE_ANT
                /**=IS_AUTHENTICATED_FULLY
            </value>
        </property>
    </bean>

    <bean id="accessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
        <property name="allowIfAllAbstainDecisions" value="false"/>
        <property name="decisionVoters">
            <list>
                <bean class="org.springframework.security.vote.RoleVoter"
                    p:rolePrefix=""/>
                <bean class="org.springframework.security.vote.AuthenticatedVoter" />
            </list>
        </property>
    </bean>

    <bean id="httpSessionContextIntegrationFilter" class="org.springframework.security.context.HttpSessionContextIntegrationFilter" />

    <bean id="securityContextHolderAwareRequestFilter" class="org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter" />

    <bean id="logoutFilter" class="org.springframework.security.ui.logout.LogoutFilter">
        <constructor-arg value="/cas-logout.jsp" />
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.ui.logout.SecurityContextLogoutHandler"
                    p:invalidateHttpSession="false" />
            </list>
        </constructor-arg>
    </bean>

    <bean id="authenticationManager" class="org.springframework.security.providers.ProviderManager">
        <property name="providers">
            <list>
                <ref bean="daoAuthenticationProvider" />
                <ref bean="casAuthenticationProvider" />

            </list>
        </property>
    </bean>

    <!-- #########################################################################################
         # CAS AUTHENTICATION COMPONENTS                                                         #
         ######################################################################################### -->
    <bean id="casExceptionTranslationFilter" class="org.springframework.security.ui.ExceptionTranslationFilter"
            p:authenticationEntryPoint-ref="casProcessingFilterEntryPoint" />

    <bean id="casProcessingFilter" class="org.springframework.security.ui.cas.CasProcessingFilter">
        <sec:custom-filter after="CAS_PROCESSING_FILTER"/>
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationFailureUrl" value="/casfailed.jsp"/>
        <property name="defaultTargetUrl" value="/"/>
        <property name="alwaysUseDefaultTargetUrl" value="false" />
        <property name="proxyGrantingTicketStorage" ref="proxyGrantingTicketStorage"/>
        <property name="proxyReceptorUrl" value="/secure/receptor"/>
    </bean>

    <bean id="casProcessingFilterEntryPoint" class="org.springframework.security.ui.cas.CasProcessingFilterEntryPoint">
        <property name="loginUrl" ref="casLoginUrl" />
        <property name="serviceProperties" ref="serviceProperties"/>
    </bean>

    <bean id="casAuthenticationProvider" class="org.springframework.security.providers.cas.CasAuthenticationProvider">
        <sec:custom-authentication-provider/>
        <property name="userDetailsService" ref="casUserService"/>
        <property name="serviceProperties" ref="serviceProperties"/>
        <property name="ticketValidator">
            <bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <constructor-arg index="0" ref="casServerHost" />                                                                                                                                                   
                <property name="proxyGrantingTicketStorage" ref="proxyGrantingTicketStorage"/>
                <property name="proxyCallbackUrl" ref="casProxyReceptorUrl" />
            </bean>
        </property>
        <property name="key" ref="casSpringSecurityAuthProviderKey"/>
    </bean>

    <bean id="proxyGrantingTicketStorage" class="org.jasig.cas.client.proxy.ProxyGrantingTicketStorageImpl"/>

    <bean id="serviceProperties" class="org.springframework.security.ui.cas.ServiceProperties">
        <property name="service" ref="casServiceUrl" />
        <property name="sendRenew" ref="casRenew" />
    </bean>

    <sec:user-service id="casUserService">
        <sec:user name="battags" password="NOT_USED" authorities="ROLE_ADMIN,ROLE_USER" />
        <sec:user name="nmond" password="NOT_USED" authorities="ROLE_ADMIN,ROLE_USER" />
        <sec:user name="steiner" password="NOT_USED" authorities="ROLE_ADMIN,ROLE_USER" />
        <sec:user name="dkopylen" password="NOT_USED" authorities="ROLE_ADMIN,ROLE_USER" />
    </sec:user-service>

    <!-- #########################################################################################
         # BASIC AUTH AUTHENTICATION COMPONENTS                                                  #
         ######################################################################################### -->
    <bean id="basicExceptionTranslationFilter" class="org.springframework.security.ui.ExceptionTranslationFilter"
            p:authenticationEntryPoint-ref="authenticationEntryPoint" />

    <bean id="basicProcessingFilter" class="org.springframework.security.ui.basicauth.BasicProcessingFilter"
        p:authenticationManager-ref="authenticationManager"
        p:authenticationEntryPoint-ref="authenticationEntryPoint"
            p:ignoreFailure="false"/>

    <bean id="authenticationEntryPoint" class="org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint"
        p:realmName="OpenRegistry RESTful API" />

    <bean id="daoAuthenticationProvider" class="org.springframework.security.providers.dao.DaoAuthenticationProvider"
        p:userDetailsService-ref="basicUserService" />

    <sec:user-service id="basicUserService">
        <sec:user name="rats" password="RAT1234" authorities="ROLE_ADMIN" />
    </sec:user-service>
</beans>